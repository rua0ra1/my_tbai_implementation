<?xml version="1.0" encoding="utf-8"?>
<launch>
    <!-- Required arguments -->
    <arg name="controllers_ns"      default="anymal_d"/>
    <arg name="controllers_args"    default="joint_controller"/>
    <arg name="tbai_config_path"    default="$(find tbai_mpc)/config/default_config.yaml"/>
    <arg name="description_name"    default="robot_description"/>
    <arg name="description_file"    default="$(find tbai_description)/urdf/anymal_d_gazebo.urdf.xacro"/>

    <!-- Gazebo parameters -->
    <arg name="gui" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="world" default="normal"/>
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="3.0"/>

    <!-- Joystick node -->
    <arg name="joystick_dev" default="/dev/input/js0"/>
    <node name="joy_node" pkg="joy" type="joy_node" output="screen">
        <param name="dev" value="$(arg joystick_dev)"/>
    </node>

    <!-- Upload config path to ROS param server -->
    <param name="tbai_config_path" type="string" value="$(arg tbai_config_path)"/>

    <!-- Launch gazebo -->
    <include file="$(find tbai_gazebo)/launch/world.launch">
        <arg name="controllers_ns" value="$(arg controllers_ns)"/>
        <arg name="controllers_args" value="$(arg controllers_args)"/>
        <arg name="config_file" value="$(arg tbai_config_path)"/>
        <arg name="description_name" value="$(arg description_name)"/>
        <arg name="description_file" value="$(arg description_file)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world" value="$(arg world)"/>
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
        <arg name="paused" value="$(arg paused)"/>
    </include>

    <!-- Launch simple node -->
    <node name="simple" pkg="tbai_mpc" type="simple" output="screen"/>

    <node pkg="tbai_mpc" type="anymal_mpc_node" name="anymal_mpc_node" output="screen"/>

    <node pkg="ocs2_anymal_commands" type="gait_command_node" name="gait_command_node"
          output="screen" launch-prefix="gnome-terminal --"/>

    <!-- Launch convex decomposition node -->
        <include file="$(find convex_plane_decomposition_ros)/launch/convex_plane_decomposition.launch">
          <arg name="parameter_file" default="$(find tbai_mpc)/config/convex_plane_decomposition_parameters.yaml"/>
          <arg name="node_parameter_file" default="$(find tbai_mpc)/config/convex_plane_decomposition_node.yaml"/>
        </include>

        <!-- Elevation mapping -->
        <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen"/>
        <!-- Front camera -->
        <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
      <remap from="~input" to="/camera/depth/points"/>
        <remap from="~output" to="/camera/depth/points_downsampled"/>
        <rosparam>
            filter_field_name: z
            filter_limit_min: 0.01
            filter_limit_max: 4.0  <!-- Limit the range of points to forward to 6 meters in viewing direction-->
            filter_limit_negative: False
            leaf_size: 0.06  <!-- Limit the density to 5 cm-->
        </rosparam>
        </node>
        <!-- Rear camera -->
        <node pkg="nodelet" type="nodelet" name="voxel_grid1" args="load pcl/VoxelGrid pcl_manager" output="screen">
      <remap from="~input" to="/rear_camera/depth/points"/>
        <remap from="~output" to="/rear_camera/depth/points_downsampled"/>
        <rosparam>
            filter_field_name: z
            filter_limit_min: 0.01
            filter_limit_max: 4.0  <!-- Limit the range of points to forward to 6 meters in viewing direction-->
            filter_limit_negative: False
            leaf_size: 0.06  <!-- Limit the density to 5 cm-->
        </rosparam>
        </node>

        <!-- Right camera -->
        <node pkg="nodelet" type="nodelet" name="voxel_grid2" args="load pcl/VoxelGrid pcl_manager" output="screen">
      <remap from="~input" to="/right_camera/depth/points"/>
        <remap from="~output" to="/right_camera/depth/points_downsampled"/>
        <rosparam>
            filter_field_name: z
            filter_limit_min: 0.01
            filter_limit_max: 4.0  <!-- Limit the range of points to forward to 6 meters in viewing direction-->
            filter_limit_negative: False
            leaf_size: 0.06  <!-- Limit the density to 5 cm-->
        </rosparam>
        </node>

        <!-- Left camera -->
        <node pkg="nodelet" type="nodelet" name="voxel_grid3" args="load pcl/VoxelGrid pcl_manager" output="screen">
      <remap from="~input" to="/left_camera/depth/points"/>
        <remap from="~output" to="/left_camera/depth/points_downsampled"/>
        <rosparam>
            filter_field_name: z
            filter_limit_min: 0.01
            filter_limit_max: 4.0  <!-- Limit the range of points to forward to 6 meters in viewing direction-->
            filter_limit_negative: False
            leaf_size: 0.06  <!-- Limit the density to 5 cm-->
        </rosparam>
        </node>

        <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
        <rosparam command="load" file="$(find tbai_mpc)/config/elevation_mapping.yaml"/>
        </node>

</launch>